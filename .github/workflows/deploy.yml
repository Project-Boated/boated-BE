name: Deploy

on:
  push:
    branches: [ "develop" ]

env:
  PROJECT_NAME: project-boated 

permissions:
  contents: read
  packages: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'adopt'
    
    - name: Make application-deploy.properties
      run: |
        cd ./src/main/resources
        touch ./application-deploy.properties
        echo "${{secrets.PROPERTIES_DEPLOY}}" > ./application-deploy.properties
      shell: bash
      
    - name: Make application-develop.properties
      run: |
        cd ./src/main/resources
        touch ./application-develop.properties
        echo "${{secrets.PROPERTIES_DEVELOP}}" > ./application-develop.properties
      shell: bash
      
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
        
    - name: Build with Gradle
      run: ./gradlew bootJar
    
    - name: Login To Docker Registry
      run: echo "${{ secrets.GIT_TOKEN }}" | docker login ghcr.io -u $ --password-stdin
    
    - name: Set up Docker BuildX
      uses: docker/setup-buildx-action@v2

    - name: Build Develop Image
      id: build-image
      uses: docker/build-push-action@v3
      with:
        context: .
        file: Dockerfile-develop
        push: true
        cache-from: type=gha
        cache-to: type=gha,mode=max
        build-args: SPRING_PROFILE=dev
        tags: |
          ghcr.io/${{ env.PROJECT_NAME }}/boated-be-develop:${{ github.sha }}
          ghcr.io/${{ env.PROJECT_NAME }}/boated-be-develop:latest
    
    - name: echo image
      env:
        IMAGE_ID: ${{ steps.build-image.outputs.metadata }}
      run: |
        echo $IMAGE_ID
        
    - name: Build Deploy Image
      run: |
        IMAGE_ID=$(echo ghcr.io/${{ github.repository_owner }}/boated-be-deploy | tr '[A-Z]' '[a-z]')
        echo IMAGE_ID=$IMAGE_ID
        
        docker build -t $IMAGE_ID:${{github.sha}} -t $IMAGE_ID:latest -f ./Dockerfile-deploy .
        docker push $IMAGE_ID:${{github.sha}}
        docker push $IMAGE_ID:latest
